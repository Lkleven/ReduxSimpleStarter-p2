import React, {Component} from "react";
import { connect } from "react-redux";	//imports in brackets are single properties
import {selectBook} from "../actions/index";
import {bindActionCreators} from "redux"; //makes sure that the actions generated by the action creator flows through all the different reducers

class BookList extends Component{
	renderList(){
		return this.props.books.map((book) =>{	//iterating through/mapping through an array of books within props
			return(
				<li 
					key={book.title} 
					onClick={() => this.props.selectBook(book)}
					className="list-group-item">{book.title}
				</li>
			);
		});
	}

	
	render(){
		return(
			<ul className="list-group col-sm-4">
				{this.renderList()}
			</ul>

		)
	}
}

//react-redux function
//whenever changes are made to state, the container will instantly re-render with a new list of books
function mapStateToProps(state){
	//Whatever is returned will show up as props inside of BookList
	return{
		books : state.books
		//activeBook : state.activeBook
	};
}

//Anything returned from this function will end up as props on the BookList container
function mapDispatchToProps(dispatch){
	//Whenever selectBook is called, the result should be passed to all of our reducers
	//dispatch receives all the actions and "spits" them out to all the reducers in our application
	//the purpose of bindActionCreators and dispatch is to make sure selectedBook to flow through all our reducers
	return bindActionCreators({selectBook: selectBook}, dispatch);
}


//export container
//Promote BookList from a component to a container - it needs to know about this new dispatch method, selectBook. Make it available as a prop.
export default connect(mapStateToProps, mapDispatchToProps)(BookList);